;; gorilla-repl.fileformat = 1

;; **
;;; # Lambda ML Example: Kaggle Titanic with Logistic Regression
;;; 
;;; An example of applying logistic regression to the data from the [Titanic: Machine Learning from Disaster](https://www.kaggle.com/c/titanic) competition from Kaggle.
;;; 
;;; First, lets set up our namespace and define a helper function for sanitizing data.
;; **

;; @@
(ns lambda-ml.examples.kaggle.titanic.worksheet
  (require [lambda-ml.regression :refer :all]
           [clojure.data.csv :as csv]
           [gorilla-plot.core :as plot]))

(defn sanitize
  [s]
  (cond (number? s) s
        (clojure.string/blank? s) nil
        :else (read-string s)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;lambda-ml.examples.kaggle.titanic.worksheet/sanitize</span>","value":"#'lambda-ml.examples.kaggle.titanic.worksheet/sanitize"}
;; <=

;; **
;;; Load the training data. Note that we're being arbitrarily selective about columns since we'll be using only a subset of the features.
;;; 
;;; The categorical features also need to be converted into indicator variables. For example, the passenger class feature ("pclass") becomes three features ("pclass1", "pclass2", and "pclass3"), where the value for "pclass1" is 1 if the passenger was in 1st class and 0 otherwise, and so on.
;; **

;; @@
(def train
  (with-open [in (clojure.java.io/reader "resources/examples/kaggle/titanic/train.csv")]
    (doall
     (->> (rest (csv/read-csv in))
          (map (fn [[id survival pclass name sex age sibsp parch ticket fare cabin embarked]]
                 (let [pclass1 (if (= pclass "1") 1 0)
                       pclass2 (if (= pclass "2") 1 0)
                       pclass3 (if (= pclass "3") 1 0)
                       male    (if (= sex "male") 1 0)]
                   (map sanitize [pclass1 pclass2 pclass3 male sibsp parch survival]))))))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;lambda-ml.examples.kaggle.titanic.worksheet/train</span>","value":"#'lambda-ml.examples.kaggle.titanic.worksheet/train"}
;; <=

;; **
;;; Visualize the categorical features in the training data.
;; **

;; @@
(for [i [0 1 2 3]]
  (let [data (frequencies (map #(nth % i) train))]
    (plot/bar-chart (keys data) (vals data))))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-lazy-seq'>(</span>","close":"<span class='clj-lazy-seq'>)</span>","separator":" ","items":[{"type":"vega","content":{"axes":[{"scale":"x","type":"x"},{"scale":"y","type":"y"}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"bff94707-d4de-42fb-b969-29b32f2570b6","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"bff94707-d4de-42fb-b969-29b32f2570b6","field":"data.y"}}],"marks":[{"type":"rect","from":{"data":"bff94707-d4de-42fb-b969-29b32f2570b6"},"properties":{"enter":{"y":{"scale":"y","field":"data.y"},"width":{"offset":-1,"scale":"x","band":true},"x":{"scale":"x","field":"data.x"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"data":[{"name":"bff94707-d4de-42fb-b969-29b32f2570b6","values":[{"x":0,"y":675},{"x":1,"y":216}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":40,"top":10,"right":10,"left":55}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"bff94707-d4de-42fb-b969-29b32f2570b6\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"bff94707-d4de-42fb-b969-29b32f2570b6\", :field \"data.y\"}}], :marks [{:type \"rect\", :from {:data \"bff94707-d4de-42fb-b969-29b32f2570b6\"}, :properties {:enter {:y {:scale \"y\", :field \"data.y\"}, :width {:offset -1, :scale \"x\", :band true}, :x {:scale \"x\", :field \"data.x\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :data [{:name \"bff94707-d4de-42fb-b969-29b32f2570b6\", :values ({:x 0, :y 675} {:x 1, :y 216})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}}"},{"type":"vega","content":{"axes":[{"scale":"x","type":"x"},{"scale":"y","type":"y"}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"128e49dc-f6ed-43e1-ae4e-6567be8555fa","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"128e49dc-f6ed-43e1-ae4e-6567be8555fa","field":"data.y"}}],"marks":[{"type":"rect","from":{"data":"128e49dc-f6ed-43e1-ae4e-6567be8555fa"},"properties":{"enter":{"y":{"scale":"y","field":"data.y"},"width":{"offset":-1,"scale":"x","band":true},"x":{"scale":"x","field":"data.x"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"data":[{"name":"128e49dc-f6ed-43e1-ae4e-6567be8555fa","values":[{"x":0,"y":707},{"x":1,"y":184}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":40,"top":10,"right":10,"left":55}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"128e49dc-f6ed-43e1-ae4e-6567be8555fa\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"128e49dc-f6ed-43e1-ae4e-6567be8555fa\", :field \"data.y\"}}], :marks [{:type \"rect\", :from {:data \"128e49dc-f6ed-43e1-ae4e-6567be8555fa\"}, :properties {:enter {:y {:scale \"y\", :field \"data.y\"}, :width {:offset -1, :scale \"x\", :band true}, :x {:scale \"x\", :field \"data.x\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :data [{:name \"128e49dc-f6ed-43e1-ae4e-6567be8555fa\", :values ({:x 0, :y 707} {:x 1, :y 184})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}}"},{"type":"vega","content":{"axes":[{"scale":"x","type":"x"},{"scale":"y","type":"y"}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"db2f4955-7093-426b-9733-890e60f2e4b9","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"db2f4955-7093-426b-9733-890e60f2e4b9","field":"data.y"}}],"marks":[{"type":"rect","from":{"data":"db2f4955-7093-426b-9733-890e60f2e4b9"},"properties":{"enter":{"y":{"scale":"y","field":"data.y"},"width":{"offset":-1,"scale":"x","band":true},"x":{"scale":"x","field":"data.x"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"data":[{"name":"db2f4955-7093-426b-9733-890e60f2e4b9","values":[{"x":1,"y":491},{"x":0,"y":400}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":40,"top":10,"right":10,"left":55}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"db2f4955-7093-426b-9733-890e60f2e4b9\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"db2f4955-7093-426b-9733-890e60f2e4b9\", :field \"data.y\"}}], :marks [{:type \"rect\", :from {:data \"db2f4955-7093-426b-9733-890e60f2e4b9\"}, :properties {:enter {:y {:scale \"y\", :field \"data.y\"}, :width {:offset -1, :scale \"x\", :band true}, :x {:scale \"x\", :field \"data.x\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :data [{:name \"db2f4955-7093-426b-9733-890e60f2e4b9\", :values ({:x 1, :y 491} {:x 0, :y 400})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}}"},{"type":"vega","content":{"axes":[{"scale":"x","type":"x"},{"scale":"y","type":"y"}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"fd007858-f324-49a3-80f8-d0f7fa25955a","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"fd007858-f324-49a3-80f8-d0f7fa25955a","field":"data.y"}}],"marks":[{"type":"rect","from":{"data":"fd007858-f324-49a3-80f8-d0f7fa25955a"},"properties":{"enter":{"y":{"scale":"y","field":"data.y"},"width":{"offset":-1,"scale":"x","band":true},"x":{"scale":"x","field":"data.x"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"data":[{"name":"fd007858-f324-49a3-80f8-d0f7fa25955a","values":[{"x":1,"y":577},{"x":0,"y":314}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":40,"top":10,"right":10,"left":55}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"fd007858-f324-49a3-80f8-d0f7fa25955a\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"fd007858-f324-49a3-80f8-d0f7fa25955a\", :field \"data.y\"}}], :marks [{:type \"rect\", :from {:data \"fd007858-f324-49a3-80f8-d0f7fa25955a\"}, :properties {:enter {:y {:scale \"y\", :field \"data.y\"}, :width {:offset -1, :scale \"x\", :band true}, :x {:scale \"x\", :field \"data.x\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :data [{:name \"fd007858-f324-49a3-80f8-d0f7fa25955a\", :values ({:x 1, :y 577} {:x 0, :y 314})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}}"}],"value":"(#gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"bff94707-d4de-42fb-b969-29b32f2570b6\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"bff94707-d4de-42fb-b969-29b32f2570b6\", :field \"data.y\"}}], :marks [{:type \"rect\", :from {:data \"bff94707-d4de-42fb-b969-29b32f2570b6\"}, :properties {:enter {:y {:scale \"y\", :field \"data.y\"}, :width {:offset -1, :scale \"x\", :band true}, :x {:scale \"x\", :field \"data.x\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :data [{:name \"bff94707-d4de-42fb-b969-29b32f2570b6\", :values ({:x 0, :y 675} {:x 1, :y 216})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}} #gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"128e49dc-f6ed-43e1-ae4e-6567be8555fa\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"128e49dc-f6ed-43e1-ae4e-6567be8555fa\", :field \"data.y\"}}], :marks [{:type \"rect\", :from {:data \"128e49dc-f6ed-43e1-ae4e-6567be8555fa\"}, :properties {:enter {:y {:scale \"y\", :field \"data.y\"}, :width {:offset -1, :scale \"x\", :band true}, :x {:scale \"x\", :field \"data.x\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :data [{:name \"128e49dc-f6ed-43e1-ae4e-6567be8555fa\", :values ({:x 0, :y 707} {:x 1, :y 184})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}} #gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"db2f4955-7093-426b-9733-890e60f2e4b9\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"db2f4955-7093-426b-9733-890e60f2e4b9\", :field \"data.y\"}}], :marks [{:type \"rect\", :from {:data \"db2f4955-7093-426b-9733-890e60f2e4b9\"}, :properties {:enter {:y {:scale \"y\", :field \"data.y\"}, :width {:offset -1, :scale \"x\", :band true}, :x {:scale \"x\", :field \"data.x\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :data [{:name \"db2f4955-7093-426b-9733-890e60f2e4b9\", :values ({:x 1, :y 491} {:x 0, :y 400})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}} #gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"fd007858-f324-49a3-80f8-d0f7fa25955a\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"fd007858-f324-49a3-80f8-d0f7fa25955a\", :field \"data.y\"}}], :marks [{:type \"rect\", :from {:data \"fd007858-f324-49a3-80f8-d0f7fa25955a\"}, :properties {:enter {:y {:scale \"y\", :field \"data.y\"}, :width {:offset -1, :scale \"x\", :band true}, :x {:scale \"x\", :field \"data.x\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :data [{:name \"fd007858-f324-49a3-80f8-d0f7fa25955a\", :values ({:x 1, :y 577} {:x 0, :y 314})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}})"}
;; <=

;; **
;;; Visualize the numerical features in the training data.
;; **

;; @@
(for [i [4 5]]
  (plot/histogram (map #(nth % i) train)))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-lazy-seq'>(</span>","close":"<span class='clj-lazy-seq'>)</span>","separator":" ","items":[{"type":"vega","content":{"axes":[{"scale":"x","type":"x"},{"scale":"y","type":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"aa30e7cb-5199-4f54-886a-068737c5eb83","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"aa30e7cb-5199-4f54-886a-068737c5eb83","field":"data.y"}}],"marks":[{"type":"line","from":{"data":"aa30e7cb-5199-4f54-886a-068737c5eb83"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"interpolate":{"value":"step-before"},"fill":{"value":"steelblue"},"fillOpacity":{"value":0.4},"stroke":{"value":"steelblue"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}],"data":[{"name":"aa30e7cb-5199-4f54-886a-068737c5eb83","values":[{"x":0.0,"y":0},{"x":0.7272727272727274,"y":608.0},{"x":1.4545454545454548,"y":209.0},{"x":2.181818181818182,"y":28.0},{"x":2.9090909090909096,"y":0.0},{"x":3.636363636363637,"y":16.0},{"x":4.363636363636364,"y":18.0},{"x":5.090909090909092,"y":5.0},{"x":5.818181818181819,"y":0.0},{"x":6.545454545454547,"y":0.0},{"x":7.272727272727274,"y":0.0},{"x":8.000000000000002,"y":7.0},{"x":8.727272727272728,"y":0}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":40,"top":10,"right":10,"left":55}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"aa30e7cb-5199-4f54-886a-068737c5eb83\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"aa30e7cb-5199-4f54-886a-068737c5eb83\", :field \"data.y\"}}], :marks [{:type \"line\", :from {:data \"aa30e7cb-5199-4f54-886a-068737c5eb83\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :interpolate {:value \"step-before\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 0.4}, :stroke {:value \"steelblue\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :data [{:name \"aa30e7cb-5199-4f54-886a-068737c5eb83\", :values ({:x 0.0, :y 0} {:x 0.7272727272727274, :y 608.0} {:x 1.4545454545454548, :y 209.0} {:x 2.181818181818182, :y 28.0} {:x 2.9090909090909096, :y 0.0} {:x 3.636363636363637, :y 16.0} {:x 4.363636363636364, :y 18.0} {:x 5.090909090909092, :y 5.0} {:x 5.818181818181819, :y 0.0} {:x 6.545454545454547, :y 0.0} {:x 7.272727272727274, :y 0.0} {:x 8.000000000000002, :y 7.0} {:x 8.727272727272728, :y 0})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}}"},{"type":"vega","content":{"axes":[{"scale":"x","type":"x"},{"scale":"y","type":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"b5c03206-911e-4ecb-ab98-46feb9514659","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"b5c03206-911e-4ecb-ab98-46feb9514659","field":"data.y"}}],"marks":[{"type":"line","from":{"data":"b5c03206-911e-4ecb-ab98-46feb9514659"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"interpolate":{"value":"step-before"},"fill":{"value":"steelblue"},"fillOpacity":{"value":0.4},"stroke":{"value":"steelblue"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}],"data":[{"name":"b5c03206-911e-4ecb-ab98-46feb9514659","values":[{"x":0.0,"y":0},{"x":0.5454545454545455,"y":678.0},{"x":1.090909090909091,"y":118.0},{"x":1.6363636363636367,"y":0.0},{"x":2.181818181818182,"y":80.0},{"x":2.7272727272727275,"y":0.0},{"x":3.272727272727273,"y":5.0},{"x":3.8181818181818183,"y":0.0},{"x":4.363636363636364,"y":4.0},{"x":4.90909090909091,"y":0.0},{"x":5.454545454545456,"y":5.0},{"x":6.000000000000002,"y":1.0},{"x":6.545454545454548,"y":0}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":40,"top":10,"right":10,"left":55}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"b5c03206-911e-4ecb-ab98-46feb9514659\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"b5c03206-911e-4ecb-ab98-46feb9514659\", :field \"data.y\"}}], :marks [{:type \"line\", :from {:data \"b5c03206-911e-4ecb-ab98-46feb9514659\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :interpolate {:value \"step-before\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 0.4}, :stroke {:value \"steelblue\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :data [{:name \"b5c03206-911e-4ecb-ab98-46feb9514659\", :values ({:x 0.0, :y 0} {:x 0.5454545454545455, :y 678.0} {:x 1.090909090909091, :y 118.0} {:x 1.6363636363636367, :y 0.0} {:x 2.181818181818182, :y 80.0} {:x 2.7272727272727275, :y 0.0} {:x 3.272727272727273, :y 5.0} {:x 3.8181818181818183, :y 0.0} {:x 4.363636363636364, :y 4.0} {:x 4.90909090909091, :y 0.0} {:x 5.454545454545456, :y 5.0} {:x 6.000000000000002, :y 1.0} {:x 6.545454545454548, :y 0})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}}"}],"value":"(#gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"aa30e7cb-5199-4f54-886a-068737c5eb83\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"aa30e7cb-5199-4f54-886a-068737c5eb83\", :field \"data.y\"}}], :marks [{:type \"line\", :from {:data \"aa30e7cb-5199-4f54-886a-068737c5eb83\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :interpolate {:value \"step-before\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 0.4}, :stroke {:value \"steelblue\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :data [{:name \"aa30e7cb-5199-4f54-886a-068737c5eb83\", :values ({:x 0.0, :y 0} {:x 0.7272727272727274, :y 608.0} {:x 1.4545454545454548, :y 209.0} {:x 2.181818181818182, :y 28.0} {:x 2.9090909090909096, :y 0.0} {:x 3.636363636363637, :y 16.0} {:x 4.363636363636364, :y 18.0} {:x 5.090909090909092, :y 5.0} {:x 5.818181818181819, :y 0.0} {:x 6.545454545454547, :y 0.0} {:x 7.272727272727274, :y 0.0} {:x 8.000000000000002, :y 7.0} {:x 8.727272727272728, :y 0})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}} #gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"b5c03206-911e-4ecb-ab98-46feb9514659\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"b5c03206-911e-4ecb-ab98-46feb9514659\", :field \"data.y\"}}], :marks [{:type \"line\", :from {:data \"b5c03206-911e-4ecb-ab98-46feb9514659\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :interpolate {:value \"step-before\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 0.4}, :stroke {:value \"steelblue\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :data [{:name \"b5c03206-911e-4ecb-ab98-46feb9514659\", :values ({:x 0.0, :y 0} {:x 0.5454545454545455, :y 678.0} {:x 1.090909090909091, :y 118.0} {:x 1.6363636363636367, :y 0.0} {:x 2.181818181818182, :y 80.0} {:x 2.7272727272727275, :y 0.0} {:x 3.272727272727273, :y 5.0} {:x 3.8181818181818183, :y 0.0} {:x 4.363636363636364, :y 4.0} {:x 4.90909090909091, :y 0.0} {:x 5.454545454545456, :y 5.0} {:x 6.000000000000002, :y 1.0} {:x 6.545454545454548, :y 0})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}})"}
;; <=

;; **
;;; Load the test data, which is structured slightly differently since we'll be making predictions on this data
;; **

;; @@
(def test
  (with-open [in (clojure.java.io/reader "resources/examples/kaggle/titanic/test.csv")]
    (doall
     (->> (rest (csv/read-csv in))
          (map (fn [[id pclass name sex age sibsp parch ticket fare cabin embarked]]
                 (let [pclass1 (if (= pclass "1") 1 0)
                       pclass2 (if (= pclass "2") 1 0)
                       pclass3 (if (= pclass "3") 1 0)
                       male    (if (= sex "male") 1 0)]
                   (cons id (map sanitize [pclass1 pclass2 pclass3 male sibsp parch])))))))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;lambda-ml.examples.kaggle.titanic.worksheet/test</span>","value":"#'lambda-ml.examples.kaggle.titanic.worksheet/test"}
;; <=

;; **
;;; Define parameters and train a logistic regression model.
;; **

;; @@
(def alpha 0.01)
(def iters 1000)
(def model (regression-fit (make-logistic-regression alpha iters) train))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;lambda-ml.examples.kaggle.titanic.worksheet/model</span>","value":"#'lambda-ml.examples.kaggle.titanic.worksheet/model"}
;; <=

;; **
;;; Generate predictions using the model. Optionally, print out the predictions in a submission-ready format.
;; **

;; @@
(def threshold 0.5)
(def predictions (regression-predict model (map rest test)))

(take 20 predictions)

;(println "PassengerId,Survived")
;(doseq [[id survival] (map (fn [t p] [(first t) p]) test predictions)]
;  (let [survival (if (> survival threshold) 1 0)]
;    (println (str id "," survival))))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-lazy-seq'>(</span>","close":"<span class='clj-lazy-seq'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-double'>0.1764800375594663</span>","value":"0.1764800375594663"},{"type":"html","content":"<span class='clj-double'>0.3503400337025108</span>","value":"0.3503400337025108"},{"type":"html","content":"<span class='clj-double'>0.3389121284911071</span>","value":"0.3389121284911071"},{"type":"html","content":"<span class='clj-double'>0.1764800375594663</span>","value":"0.1764800375594663"},{"type":"html","content":"<span class='clj-double'>0.4054996756871972</span>","value":"0.4054996756871972"},{"type":"html","content":"<span class='clj-double'>0.1764800375594663</span>","value":"0.1764800375594663"},{"type":"html","content":"<span class='clj-double'>0.36911951265866605</span>","value":"0.36911951265866605"},{"type":"html","content":"<span class='clj-double'>0.3740804137902961</span>","value":"0.3740804137902961"},{"type":"html","content":"<span class='clj-double'>0.36911951265866605</span>","value":"0.36911951265866605"},{"type":"html","content":"<span class='clj-double'>0.15401158170787435</span>","value":"0.15401158170787435"},{"type":"html","content":"<span class='clj-double'>0.1764800375594663</span>","value":"0.1764800375594663"},{"type":"html","content":"<span class='clj-double'>0.42652608123559366</span>","value":"0.42652608123559366"},{"type":"html","content":"<span class='clj-double'>0.6517626537860418</span>","value":"0.6517626537860418"},{"type":"html","content":"<span class='clj-double'>0.320887800890039</span>","value":"0.320887800890039"},{"type":"html","content":"<span class='clj-double'>0.6517626537860418</span>","value":"0.6517626537860418"},{"type":"html","content":"<span class='clj-double'>0.5633303416812022</span>","value":"0.5633303416812022"},{"type":"html","content":"<span class='clj-double'>0.3389121284911071</span>","value":"0.3389121284911071"},{"type":"html","content":"<span class='clj-double'>0.1764800375594663</span>","value":"0.1764800375594663"},{"type":"html","content":"<span class='clj-double'>0.3503400337025108</span>","value":"0.3503400337025108"},{"type":"html","content":"<span class='clj-double'>0.36911951265866605</span>","value":"0.36911951265866605"}],"value":"(0.1764800375594663 0.3503400337025108 0.3389121284911071 0.1764800375594663 0.4054996756871972 0.1764800375594663 0.36911951265866605 0.3740804137902961 0.36911951265866605 0.15401158170787435 0.1764800375594663 0.42652608123559366 0.6517626537860418 0.320887800890039 0.6517626537860418 0.5633303416812022 0.3389121284911071 0.1764800375594663 0.3503400337025108 0.36911951265866605)"}
;; <=

;; @@

;; @@
