;; gorilla-repl.fileformat = 1

;; **
;;; # Foo
;; **

;; @@
(ns lambda-ml.examples.kaggle.march-madness
  (require [lambda-ml.core :refer :all]
           [lambda-ml.metrics :refer :all]
           [lambda-ml.regression :refer :all]
           [clojure.data.csv :as csv]
           [gorilla-plot.core :as plot]))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; @@
(def teams
  (with-open [in (clojure.java.io/reader "march-machine-learning-mania-2016-v2/Teams.csv")]
    (doall
      (->> (rest (csv/read-csv in))
           (reduce (fn [m [id name]] (assoc m (read-string id) name)) {})))))

(def slots
  (with-open [in (clojure.java.io/reader "march-machine-learning-mania-2016-v2/TourneySlots.csv")]
    (doall
      (->> (rest (csv/read-csv in))
           (reduce (fn [m [season slot hi lo]]
                     (let [keys [(read-string season) slot]
                           val [hi lo]]
                       (assoc-in m keys val)))
                   {})))))

(def seeds
  (with-open [in (clojure.java.io/reader "march-machine-learning-mania-2016-v2/TourneySeeds.csv")]
    (doall
      (->> (rest (csv/read-csv in))
           (reduce (fn [m [season seed team]]
                     (assoc-in m [(read-string season) seed] (read-string team)))
                   {})))))

(defn parse-seed
  [s]
  (Integer/parseInt (subs s 1 3)))

(def seeds-index
  (with-open [in (clojure.java.io/reader "march-machine-learning-mania-2016-v2/TourneySeeds.csv")]
    (doall
      (->> (rest (csv/read-csv in))
           (reduce (fn [m [season seed team]]
                     (assoc-in m (map read-string [season team]) (parse-seed seed)))
                   {})))))

(def tourney-results
  (with-open [in (clojure.java.io/reader "march-machine-learning-mania-2016-v2/TourneyCompactResults.csv")]
    (doall
      (->> (rest (csv/read-csv in))
           (reduce (fn [m row]
                     (let [[season daynum wteam wscore lteam lscore wloc numot] (map read-string row)]
                       (-> m
                           (assoc-in [season wteam lteam] {:score wscore :oppscore lscore})
                           (assoc-in [season lteam wteam] {:score lscore :oppscore wscore}))))
                   {})))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;lambda-ml.examples.kaggle.march-madness/tourney-results</span>","value":"#'lambda-ml.examples.kaggle.march-madness/tourney-results"}
;; <=

;; @@
(def stats
  (with-open [in (clojure.java.io/reader "march-machine-learning-mania-2016-v2/RegularSeasonCompactResults.csv")]
    (doall
      (->> (rest (csv/read-csv in))
           (reduce (fn [m row]
                     (let [[season daynum wteam wscore lteam lscore wloc numot] (map read-string row)]
                       (-> m
                           (update-in [season wteam] (fn [s]
                                                       (-> (or s {:g 0 :w 0 :l 0 :pf 0 :pa 0})
                                                           (update-in [:w] inc)
                                                           (update-in [:pf] (partial + wscore))
                                                           (update-in [:pa] (partial + lscore)))))
                           (update-in [season lteam] (fn [s]
                                                       (-> (or s {:g 0 :w 0 :l 0 :pf 0 :pa 0})
                                                           (update-in [:l] inc)
                                                           (update-in [:pf] (partial + lscore))
                                                           (update-in [:pa] (partial + wscore))))))))
                   {})))))

(defn win-percentage
  [year team]
  (let [w (get-in stats [year team :w])
        l (get-in stats [year team :l])]
    (float (/ w (+ w l)))))

(defn points-ratio
  [year team]
  (let [pf (get-in stats [year team :pf])
        pa (get-in stats [year team :pa])]
	(float (/ pf pa))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;lambda-ml.examples.kaggle.march-madness/points-ratio</span>","value":"#'lambda-ml.examples.kaggle.march-madness/points-ratio"}
;; <=

;; @@
(defn generate-index
  ([year]
   (generate-index year (seeds year) {}))
  ([year index prev]
   (if (<= (count index) (count prev))
     index
     (let [updated (loop [slots (slots year)
                          result index]
                     (if (empty? slots)
                       result
                       (let [[slot [hi lo]] (first slots)
                             hiteam (get-in index [hi])
                             loteam (get-in index [lo])
                             scores (get-in tourney-results [year hiteam loteam])]
                         (if (and hiteam loteam scores)
                           (let [winner (if (> (:score scores) (:oppscore scores)) hiteam loteam)]
                             (recur (rest slots) (assoc-in result [slot] winner)))
                           (recur (rest slots) result)))))]
       (generate-index year updated index)))))

(defn parse-round
  [slot]
  (if (= "R" (subs slot 0 1))
    (Integer/parseInt (subs slot 1 2))
    0))

(defn generate-matchups
  [year]
  (let [index (generate-index year)]
    (for [[slot t] (slots year)
          :let [[hi lo] (map index t)]
          :when (and hi lo)]
      (let [round (parse-round slot)
            hiseed (get-in seeds-index [year hi])
            loseed (get-in seeds-index [year lo])
            scores (get-in tourney-results [year hi lo])
            ; TODO: features go here
            matchup [year round hi lo
                     (teams hi)
                     (teams lo)
                     (win-percentage year hi)
                     (win-percentage year lo)
                     (points-ratio year hi)
                     (points-ratio year lo)
                     hiseed
                     loseed]]
        (if scores
          (let [winner (if (> (:score scores) (:oppscore scores)) 0 1)]
            (conj matchup winner))
          matchup)))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;lambda-ml.examples.kaggle.march-madness/generate-matchups</span>","value":"#'lambda-ml.examples.kaggle.march-madness/generate-matchups"}
;; <=

;; @@
(def training-set
  (apply concat
         (for [year (range 1985 2012)]
           (generate-matchups year))))

(def test-set
  (apply concat
         (for [year (range 2012 2016)]
           (generate-matchups year))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;lambda-ml.examples.kaggle.march-madness/test-set</span>","value":"#'lambda-ml.examples.kaggle.march-madness/test-set"}
;; <=

;; @@
(defn encode-features
  [matchup]
  (let [[year round hi lo
         hiteam loteam
         hiwinpct lowinpct
         hiptsratio loptsratio
         hiseed loseed winner] matchup]
    [hiwinpct lowinpct hiptsratio loptsratio hiseed loseed winner]))

(def alpha 0.01)
(def lambda 0.1)
(def iters 1000)
(def model (regression-fit (make-logistic-regression alpha lambda iters) (map encode-features training-set)))

(model :parameters)
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-lazy-seq'>(</span>","close":"<span class='clj-lazy-seq'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-double'>0.08140641166130569</span>","value":"0.08140641166130569"},{"type":"html","content":"<span class='clj-double'>0.5756402786377429</span>","value":"0.5756402786377429"},{"type":"html","content":"<span class='clj-double'>0.6258873695092494</span>","value":"0.6258873695092494"},{"type":"html","content":"<span class='clj-double'>-0.3151588058954562</span>","value":"-0.3151588058954562"},{"type":"html","content":"<span class='clj-double'>-0.36955042077212497</span>","value":"-0.36955042077212497"},{"type":"html","content":"<span class='clj-double'>0.22068150087975158</span>","value":"0.22068150087975158"},{"type":"html","content":"<span class='clj-double'>-0.20269654762762082</span>","value":"-0.20269654762762082"}],"value":"(0.08140641166130569 0.5756402786377429 0.6258873695092494 -0.3151588058954562 -0.36955042077212497 0.22068150087975158 -0.20269654762762082)"}
;; <=

;; @@
(def predictions (regression-predict model (map (comp butlast encode-features) test-set)))

(def roc (roc-curve (map last test-set) predictions))

(float (auc roc))

(plot/list-plot roc :joined true)
;; @@
;; =>
;;; {"type":"vega","content":{"axes":[{"scale":"x","type":"x"},{"scale":"y","type":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"f277ea4c-3440-403b-9179-ea71795b91ee","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"f277ea4c-3440-403b-9179-ea71795b91ee","field":"data.y"}}],"marks":[{"type":"line","from":{"data":"f277ea4c-3440-403b-9179-ea71795b91ee"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}],"data":[{"name":"f277ea4c-3440-403b-9179-ea71795b91ee","values":[{"x":0,"y":0.0119047619047619},{"x":0,"y":0.02380952380952381},{"x":0,"y":0.03571428571428571},{"x":0.005434782608695652,"y":0.03571428571428571},{"x":0.005434782608695652,"y":0.04761904761904762},{"x":0.0108695652173913,"y":0.04761904761904762},{"x":0.0108695652173913,"y":0.05952380952380952},{"x":0.01630434782608696,"y":0.05952380952380952},{"x":0.02173913043478261,"y":0.05952380952380952},{"x":0.02173913043478261,"y":0.07142857142857142},{"x":0.02717391304347826,"y":0.07142857142857142},{"x":0.02717391304347826,"y":0.08333333333333333},{"x":0.02717391304347826,"y":0.09523809523809525},{"x":0.03260869565217391,"y":0.09523809523809525},{"x":0.03804347826086957,"y":0.09523809523809525},{"x":0.04347826086956522,"y":0.09523809523809525},{"x":0.04347826086956522,"y":0.1071428571428571},{"x":0.04891304347826087,"y":0.1071428571428571},{"x":0.04891304347826087,"y":0.119047619047619},{"x":0.04891304347826087,"y":0.130952380952381},{"x":0.04891304347826087,"y":0.1428571428571429},{"x":0.05434782608695652,"y":0.1428571428571429},{"x":0.05978260869565217,"y":0.1428571428571429},{"x":0.05978260869565217,"y":0.1547619047619048},{"x":0.06521739130434782,"y":0.1547619047619048},{"x":0.07065217391304349,"y":0.1547619047619048},{"x":0.07065217391304349,"y":0.1666666666666667},{"x":0.07608695652173914,"y":0.1666666666666667},{"x":0.07608695652173914,"y":0.1785714285714286},{"x":0.07608695652173914,"y":0.1904761904761905},{"x":0.07608695652173914,"y":0.2023809523809524},{"x":0.07608695652173914,"y":0.2142857142857143},{"x":0.08152173913043478,"y":0.2142857142857143},{"x":0.08152173913043478,"y":0.2261904761904762},{"x":0.08152173913043478,"y":0.2380952380952381},{"x":0.08695652173913043,"y":0.2380952380952381},{"x":0.08695652173913043,"y":0.25},{"x":0.08695652173913043,"y":0.2619047619047619},{"x":0.0923913043478261,"y":0.2619047619047619},{"x":0.09782608695652174,"y":0.2619047619047619},{"x":0.1032608695652174,"y":0.2619047619047619},{"x":0.1032608695652174,"y":0.2738095238095238},{"x":0.108695652173913,"y":0.2738095238095238},{"x":0.108695652173913,"y":0.2857142857142857},{"x":0.108695652173913,"y":0.2976190476190476},{"x":0.108695652173913,"y":0.3095238095238095},{"x":0.1141304347826087,"y":0.3095238095238095},{"x":0.1195652173913043,"y":0.3095238095238095},{"x":0.125,"y":0.3095238095238095},{"x":0.125,"y":0.3214285714285714},{"x":0.1304347826086957,"y":0.3214285714285714},{"x":0.1358695652173913,"y":0.3214285714285714},{"x":0.1358695652173913,"y":0.3333333333333333},{"x":0.1358695652173913,"y":0.3452380952380952},{"x":0.1358695652173913,"y":0.3571428571428571},{"x":0.1358695652173913,"y":0.369047619047619},{"x":0.1358695652173913,"y":0.380952380952381},{"x":0.141304347826087,"y":0.380952380952381},{"x":0.1467391304347826,"y":0.380952380952381},{"x":0.1521739130434783,"y":0.380952380952381},{"x":0.1576086956521739,"y":0.380952380952381},{"x":0.1630434782608696,"y":0.380952380952381},{"x":0.1684782608695652,"y":0.380952380952381},{"x":0.1739130434782609,"y":0.380952380952381},{"x":0.1739130434782609,"y":0.3928571428571429},{"x":0.1739130434782609,"y":0.4047619047619048},{"x":0.1739130434782609,"y":0.4166666666666667},{"x":0.1793478260869565,"y":0.4166666666666667},{"x":0.1847826086956522,"y":0.4166666666666667},{"x":0.1902173913043478,"y":0.4166666666666667},{"x":0.1956521739130435,"y":0.4166666666666667},{"x":0.1956521739130435,"y":0.4285714285714286},{"x":0.2010869565217391,"y":0.4285714285714286},{"x":0.2065217391304348,"y":0.4285714285714286},{"x":0.2119565217391304,"y":0.4285714285714286},{"x":0.2173913043478261,"y":0.4285714285714286},{"x":0.2228260869565217,"y":0.4285714285714286},{"x":0.2282608695652174,"y":0.4285714285714286},{"x":0.233695652173913,"y":0.4285714285714286},{"x":0.233695652173913,"y":0.4404761904761905},{"x":0.2391304347826087,"y":0.4404761904761905},{"x":0.2445652173913043,"y":0.4404761904761905},{"x":0.25,"y":0.4404761904761905},{"x":0.2554347826086957,"y":0.4404761904761905},{"x":0.2608695652173913,"y":0.4404761904761905},{"x":0.2608695652173913,"y":0.4523809523809524},{"x":0.266304347826087,"y":0.4523809523809524},{"x":0.266304347826087,"y":0.4642857142857143},{"x":0.2717391304347826,"y":0.4642857142857143},{"x":0.2771739130434783,"y":0.4642857142857143},{"x":0.2826086956521739,"y":0.4642857142857143},{"x":0.2880434782608696,"y":0.4642857142857143},{"x":0.2934782608695652,"y":0.4642857142857143},{"x":0.2989130434782609,"y":0.4642857142857143},{"x":0.2989130434782609,"y":0.4761904761904762},{"x":0.2989130434782609,"y":0.4880952380952381},{"x":0.3043478260869565,"y":0.4880952380952381},{"x":0.3097826086956522,"y":0.4880952380952381},{"x":0.3152173913043478,"y":0.4880952380952381},{"x":0.3206521739130435,"y":0.4880952380952381},{"x":0.3206521739130435,"y":0.5},{"x":0.3260869565217391,"y":0.5},{"x":0.3260869565217391,"y":0.5119047619047619},{"x":0.3315217391304348,"y":0.5119047619047619},{"x":0.3369565217391304,"y":0.5119047619047619},{"x":0.3423913043478261,"y":0.5119047619047619},{"x":0.3478260869565217,"y":0.5119047619047619},{"x":0.3478260869565217,"y":0.5238095238095238},{"x":0.3532608695652174,"y":0.5238095238095238},{"x":0.3532608695652174,"y":0.5357142857142857},{"x":0.358695652173913,"y":0.5357142857142857},{"x":0.3641304347826087,"y":0.5357142857142857},{"x":0.3641304347826087,"y":0.5476190476190476},{"x":0.3641304347826087,"y":0.5595238095238095},{"x":0.3695652173913043,"y":0.5595238095238095},{"x":0.3695652173913043,"y":0.5714285714285714},{"x":0.3695652173913043,"y":0.5833333333333333},{"x":0.3695652173913043,"y":0.5952380952380952},{"x":0.375,"y":0.5952380952380952},{"x":0.3804347826086957,"y":0.5952380952380952},{"x":0.3858695652173913,"y":0.5952380952380952},{"x":0.391304347826087,"y":0.5952380952380952},{"x":0.3967391304347826,"y":0.5952380952380952},{"x":0.4021739130434783,"y":0.5952380952380952},{"x":0.4076086956521739,"y":0.5952380952380952},{"x":0.4130434782608696,"y":0.5952380952380952},{"x":0.4184782608695652,"y":0.5952380952380952},{"x":0.4239130434782609,"y":0.5952380952380952},{"x":0.4293478260869565,"y":0.5952380952380952},{"x":0.4293478260869565,"y":0.6071428571428571},{"x":0.4293478260869565,"y":0.619047619047619},{"x":0.4293478260869565,"y":0.630952380952381},{"x":0.4293478260869565,"y":0.6428571428571429},{"x":0.4347826086956522,"y":0.6428571428571429},{"x":0.4347826086956522,"y":0.6547619047619048},{"x":0.4402173913043478,"y":0.6547619047619048},{"x":0.4402173913043478,"y":0.6666666666666667},{"x":0.4402173913043478,"y":0.6785714285714286},{"x":0.4456521739130435,"y":0.6785714285714286},{"x":0.4456521739130435,"y":0.6904761904761905},{"x":0.4510869565217391,"y":0.6904761904761905},{"x":0.4510869565217391,"y":0.7023809523809524},{"x":0.4565217391304348,"y":0.7023809523809524},{"x":0.4619565217391304,"y":0.7023809523809524},{"x":0.4619565217391304,"y":0.7142857142857143},{"x":0.4673913043478261,"y":0.7142857142857143},{"x":0.4728260869565217,"y":0.7142857142857143},{"x":0.4782608695652174,"y":0.7142857142857143},{"x":0.483695652173913,"y":0.7142857142857143},{"x":0.4891304347826087,"y":0.7142857142857143},{"x":0.4891304347826087,"y":0.7261904761904762},{"x":0.4891304347826087,"y":0.7380952380952381},{"x":0.4945652173913043,"y":0.7380952380952381},{"x":0.5,"y":0.7380952380952381},{"x":0.5,"y":0.75},{"x":0.5054347826086957,"y":0.75},{"x":0.5054347826086957,"y":0.7619047619047619},{"x":0.5108695652173914,"y":0.7619047619047619},{"x":0.516304347826087,"y":0.7619047619047619},{"x":0.516304347826087,"y":0.7738095238095238},{"x":0.516304347826087,"y":0.7857142857142857},{"x":0.5217391304347826,"y":0.7857142857142857},{"x":0.5271739130434783,"y":0.7857142857142857},{"x":0.532608695652174,"y":0.7857142857142857},{"x":0.5380434782608696,"y":0.7857142857142857},{"x":0.5434782608695652,"y":0.7857142857142857},{"x":0.5489130434782609,"y":0.7857142857142857},{"x":0.5489130434782609,"y":0.7976190476190476},{"x":0.5543478260869565,"y":0.7976190476190476},{"x":0.5597826086956522,"y":0.7976190476190476},{"x":0.5652173913043478,"y":0.7976190476190476},{"x":0.5652173913043478,"y":0.8095238095238095},{"x":0.5706521739130435,"y":0.8095238095238095},{"x":0.5706521739130435,"y":0.8214285714285714},{"x":0.5760869565217391,"y":0.8214285714285714},{"x":0.5815217391304348,"y":0.8214285714285714},{"x":0.5869565217391304,"y":0.8214285714285714},{"x":0.5869565217391304,"y":0.8333333333333333},{"x":0.592391304347826,"y":0.8333333333333333},{"x":0.5978260869565217,"y":0.8333333333333333},{"x":0.6032608695652174,"y":0.8333333333333333},{"x":0.6032608695652174,"y":0.8452380952380952},{"x":0.608695652173913,"y":0.8452380952380952},{"x":0.608695652173913,"y":0.8571428571428571},{"x":0.608695652173913,"y":0.869047619047619},{"x":0.6141304347826086,"y":0.869047619047619},{"x":0.6195652173913043,"y":0.869047619047619},{"x":0.625,"y":0.869047619047619},{"x":0.6304347826086957,"y":0.869047619047619},{"x":0.6358695652173914,"y":0.869047619047619},{"x":0.641304347826087,"y":0.869047619047619},{"x":0.6467391304347826,"y":0.869047619047619},{"x":0.6521739130434783,"y":0.869047619047619},{"x":0.657608695652174,"y":0.869047619047619},{"x":0.657608695652174,"y":0.880952380952381},{"x":0.6630434782608696,"y":0.880952380952381},{"x":0.6630434782608696,"y":0.8928571428571429},{"x":0.6684782608695652,"y":0.8928571428571429},{"x":0.6739130434782609,"y":0.8928571428571429},{"x":0.6793478260869565,"y":0.8928571428571429},{"x":0.6793478260869565,"y":0.9047619047619048},{"x":0.6847826086956522,"y":0.9047619047619048},{"x":0.6902173913043478,"y":0.9047619047619048},{"x":0.6956521739130435,"y":0.9047619047619048},{"x":0.7010869565217391,"y":0.9047619047619048},{"x":0.7065217391304348,"y":0.9047619047619048},{"x":0.7065217391304348,"y":0.9166666666666667},{"x":0.7119565217391304,"y":0.9166666666666667},{"x":0.717391304347826,"y":0.9166666666666667},{"x":0.7228260869565217,"y":0.9166666666666667},{"x":0.7282608695652174,"y":0.9166666666666667},{"x":0.733695652173913,"y":0.9166666666666667},{"x":0.7391304347826086,"y":0.9166666666666667},{"x":0.7445652173913043,"y":0.9166666666666667},{"x":0.75,"y":0.9166666666666667},{"x":0.7554347826086957,"y":0.9166666666666667},{"x":0.7608695652173914,"y":0.9166666666666667},{"x":0.766304347826087,"y":0.9166666666666667},{"x":0.7717391304347826,"y":0.9166666666666667},{"x":0.7771739130434783,"y":0.9166666666666667},{"x":0.782608695652174,"y":0.9166666666666667},{"x":0.782608695652174,"y":0.9285714285714286},{"x":0.7880434782608696,"y":0.9285714285714286},{"x":0.7934782608695652,"y":0.9285714285714286},{"x":0.7989130434782609,"y":0.9285714285714286},{"x":0.8043478260869565,"y":0.9285714285714286},{"x":0.8097826086956522,"y":0.9285714285714286},{"x":0.8097826086956522,"y":0.9404761904761905},{"x":0.8152173913043478,"y":0.9404761904761905},{"x":0.8206521739130435,"y":0.9404761904761905},{"x":0.8260869565217391,"y":0.9404761904761905},{"x":0.8260869565217391,"y":0.9523809523809524},{"x":0.8315217391304348,"y":0.9523809523809524},{"x":0.8369565217391304,"y":0.9523809523809524},{"x":0.8369565217391304,"y":0.9642857142857143},{"x":0.842391304347826,"y":0.9642857142857143},{"x":0.842391304347826,"y":0.9761904761904762},{"x":0.8478260869565217,"y":0.9761904761904762},{"x":0.8478260869565217,"y":0.9880952380952381},{"x":0.8532608695652174,"y":0.9880952380952381},{"x":0.858695652173913,"y":0.9880952380952381},{"x":0.8641304347826086,"y":0.9880952380952381},{"x":0.8695652173913043,"y":0.9880952380952381},{"x":0.875,"y":0.9880952380952381},{"x":0.875,"y":1},{"x":0.8804347826086957,"y":1},{"x":0.8858695652173914,"y":1},{"x":0.891304347826087,"y":1},{"x":0.8967391304347826,"y":1},{"x":0.9021739130434783,"y":1},{"x":0.907608695652174,"y":1},{"x":0.9130434782608696,"y":1},{"x":0.9184782608695652,"y":1},{"x":0.9239130434782609,"y":1},{"x":0.9293478260869565,"y":1},{"x":0.9347826086956522,"y":1},{"x":0.9402173913043478,"y":1},{"x":0.9456521739130435,"y":1},{"x":0.9510869565217391,"y":1},{"x":0.9565217391304348,"y":1},{"x":0.9619565217391304,"y":1},{"x":0.967391304347826,"y":1},{"x":0.9728260869565217,"y":1},{"x":0.9782608695652174,"y":1},{"x":0.983695652173913,"y":1},{"x":0.9891304347826086,"y":1},{"x":0.9945652173913043,"y":1},{"x":1,"y":1}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":40,"top":10,"right":10,"left":55}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:scale \"x\", :type \"x\"} {:scale \"y\", :type \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"f277ea4c-3440-403b-9179-ea71795b91ee\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"f277ea4c-3440-403b-9179-ea71795b91ee\", :field \"data.y\"}}], :marks [{:type \"line\", :from {:data \"f277ea4c-3440-403b-9179-ea71795b91ee\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :data [{:name \"f277ea4c-3440-403b-9179-ea71795b91ee\", :values ({:x 0, :y 1/84} {:x 0, :y 1/42} {:x 0, :y 1/28} {:x 1/184, :y 1/28} {:x 1/184, :y 1/21} {:x 1/92, :y 1/21} {:x 1/92, :y 5/84} {:x 3/184, :y 5/84} {:x 1/46, :y 5/84} {:x 1/46, :y 1/14} {:x 5/184, :y 1/14} {:x 5/184, :y 1/12} {:x 5/184, :y 2/21} {:x 3/92, :y 2/21} {:x 7/184, :y 2/21} {:x 1/23, :y 2/21} {:x 1/23, :y 3/28} {:x 9/184, :y 3/28} {:x 9/184, :y 5/42} {:x 9/184, :y 11/84} {:x 9/184, :y 1/7} {:x 5/92, :y 1/7} {:x 11/184, :y 1/7} {:x 11/184, :y 13/84} {:x 3/46, :y 13/84} {:x 13/184, :y 13/84} {:x 13/184, :y 1/6} {:x 7/92, :y 1/6} {:x 7/92, :y 5/28} {:x 7/92, :y 4/21} {:x 7/92, :y 17/84} {:x 7/92, :y 3/14} {:x 15/184, :y 3/14} {:x 15/184, :y 19/84} {:x 15/184, :y 5/21} {:x 2/23, :y 5/21} {:x 2/23, :y 1/4} {:x 2/23, :y 11/42} {:x 17/184, :y 11/42} {:x 9/92, :y 11/42} {:x 19/184, :y 11/42} {:x 19/184, :y 23/84} {:x 5/46, :y 23/84} {:x 5/46, :y 2/7} {:x 5/46, :y 25/84} {:x 5/46, :y 13/42} {:x 21/184, :y 13/42} {:x 11/92, :y 13/42} {:x 1/8, :y 13/42} {:x 1/8, :y 9/28} {:x 3/23, :y 9/28} {:x 25/184, :y 9/28} {:x 25/184, :y 1/3} {:x 25/184, :y 29/84} {:x 25/184, :y 5/14} {:x 25/184, :y 31/84} {:x 25/184, :y 8/21} {:x 13/92, :y 8/21} {:x 27/184, :y 8/21} {:x 7/46, :y 8/21} {:x 29/184, :y 8/21} {:x 15/92, :y 8/21} {:x 31/184, :y 8/21} {:x 4/23, :y 8/21} {:x 4/23, :y 11/28} {:x 4/23, :y 17/42} {:x 4/23, :y 5/12} {:x 33/184, :y 5/12} {:x 17/92, :y 5/12} {:x 35/184, :y 5/12} {:x 9/46, :y 5/12} {:x 9/46, :y 3/7} {:x 37/184, :y 3/7} {:x 19/92, :y 3/7} {:x 39/184, :y 3/7} {:x 5/23, :y 3/7} {:x 41/184, :y 3/7} {:x 21/92, :y 3/7} {:x 43/184, :y 3/7} {:x 43/184, :y 37/84} {:x 11/46, :y 37/84} {:x 45/184, :y 37/84} {:x 1/4, :y 37/84} {:x 47/184, :y 37/84} {:x 6/23, :y 37/84} {:x 6/23, :y 19/42} {:x 49/184, :y 19/42} {:x 49/184, :y 13/28} {:x 25/92, :y 13/28} {:x 51/184, :y 13/28} {:x 13/46, :y 13/28} {:x 53/184, :y 13/28} {:x 27/92, :y 13/28} {:x 55/184, :y 13/28} {:x 55/184, :y 10/21} {:x 55/184, :y 41/84} {:x 7/23, :y 41/84} {:x 57/184, :y 41/84} {:x 29/92, :y 41/84} {:x 59/184, :y 41/84} {:x 59/184, :y 1/2} {:x 15/46, :y 1/2} {:x 15/46, :y 43/84} {:x 61/184, :y 43/84} {:x 31/92, :y 43/84} {:x 63/184, :y 43/84} {:x 8/23, :y 43/84} {:x 8/23, :y 11/21} {:x 65/184, :y 11/21} {:x 65/184, :y 15/28} {:x 33/92, :y 15/28} {:x 67/184, :y 15/28} {:x 67/184, :y 23/42} {:x 67/184, :y 47/84} {:x 17/46, :y 47/84} {:x 17/46, :y 4/7} {:x 17/46, :y 7/12} {:x 17/46, :y 25/42} {:x 3/8, :y 25/42} {:x 35/92, :y 25/42} {:x 71/184, :y 25/42} {:x 9/23, :y 25/42} {:x 73/184, :y 25/42} {:x 37/92, :y 25/42} {:x 75/184, :y 25/42} {:x 19/46, :y 25/42} {:x 77/184, :y 25/42} {:x 39/92, :y 25/42} {:x 79/184, :y 25/42} {:x 79/184, :y 17/28} {:x 79/184, :y 13/21} {:x 79/184, :y 53/84} {:x 79/184, :y 9/14} {:x 10/23, :y 9/14} {:x 10/23, :y 55/84} {:x 81/184, :y 55/84} {:x 81/184, :y 2/3} {:x 81/184, :y 19/28} {:x 41/92, :y 19/28} {:x 41/92, :y 29/42} {:x 83/184, :y 29/42} {:x 83/184, :y 59/84} {:x 21/46, :y 59/84} {:x 85/184, :y 59/84} {:x 85/184, :y 5/7} {:x 43/92, :y 5/7} {:x 87/184, :y 5/7} {:x 11/23, :y 5/7} {:x 89/184, :y 5/7} {:x 45/92, :y 5/7} {:x 45/92, :y 61/84} {:x 45/92, :y 31/42} {:x 91/184, :y 31/42} {:x 1/2, :y 31/42} {:x 1/2, :y 3/4} {:x 93/184, :y 3/4} {:x 93/184, :y 16/21} {:x 47/92, :y 16/21} {:x 95/184, :y 16/21} {:x 95/184, :y 65/84} {:x 95/184, :y 11/14} {:x 12/23, :y 11/14} {:x 97/184, :y 11/14} {:x 49/92, :y 11/14} {:x 99/184, :y 11/14} {:x 25/46, :y 11/14} {:x 101/184, :y 11/14} {:x 101/184, :y 67/84} {:x 51/92, :y 67/84} {:x 103/184, :y 67/84} {:x 13/23, :y 67/84} {:x 13/23, :y 17/21} {:x 105/184, :y 17/21} {:x 105/184, :y 23/28} {:x 53/92, :y 23/28} {:x 107/184, :y 23/28} {:x 27/46, :y 23/28} {:x 27/46, :y 5/6} {:x 109/184, :y 5/6} {:x 55/92, :y 5/6} {:x 111/184, :y 5/6} {:x 111/184, :y 71/84} {:x 14/23, :y 71/84} {:x 14/23, :y 6/7} {:x 14/23, :y 73/84} {:x 113/184, :y 73/84} {:x 57/92, :y 73/84} {:x 5/8, :y 73/84} {:x 29/46, :y 73/84} {:x 117/184, :y 73/84} {:x 59/92, :y 73/84} {:x 119/184, :y 73/84} {:x 15/23, :y 73/84} {:x 121/184, :y 73/84} {:x 121/184, :y 37/42} {:x 61/92, :y 37/42} {:x 61/92, :y 25/28} {:x 123/184, :y 25/28} {:x 31/46, :y 25/28} {:x 125/184, :y 25/28} {:x 125/184, :y 19/21} {:x 63/92, :y 19/21} {:x 127/184, :y 19/21} {:x 16/23, :y 19/21} {:x 129/184, :y 19/21} {:x 65/92, :y 19/21} {:x 65/92, :y 11/12} {:x 131/184, :y 11/12} {:x 33/46, :y 11/12} {:x 133/184, :y 11/12} {:x 67/92, :y 11/12} {:x 135/184, :y 11/12} {:x 17/23, :y 11/12} {:x 137/184, :y 11/12} {:x 3/4, :y 11/12} {:x 139/184, :y 11/12} {:x 35/46, :y 11/12} {:x 141/184, :y 11/12} {:x 71/92, :y 11/12} {:x 143/184, :y 11/12} {:x 18/23, :y 11/12} {:x 18/23, :y 13/14} {:x 145/184, :y 13/14} {:x 73/92, :y 13/14} {:x 147/184, :y 13/14} {:x 37/46, :y 13/14} {:x 149/184, :y 13/14} {:x 149/184, :y 79/84} {:x 75/92, :y 79/84} {:x 151/184, :y 79/84} {:x 19/23, :y 79/84} {:x 19/23, :y 20/21} {:x 153/184, :y 20/21} {:x 77/92, :y 20/21} {:x 77/92, :y 27/28} {:x 155/184, :y 27/28} {:x 155/184, :y 41/42} {:x 39/46, :y 41/42} {:x 39/46, :y 83/84} {:x 157/184, :y 83/84} {:x 79/92, :y 83/84} {:x 159/184, :y 83/84} {:x 20/23, :y 83/84} {:x 7/8, :y 83/84} {:x 7/8, :y 1} {:x 81/92, :y 1} {:x 163/184, :y 1} {:x 41/46, :y 1} {:x 165/184, :y 1} {:x 83/92, :y 1} {:x 167/184, :y 1} {:x 21/23, :y 1} {:x 169/184, :y 1} {:x 85/92, :y 1} {:x 171/184, :y 1} {:x 43/46, :y 1} {:x 173/184, :y 1} {:x 87/92, :y 1} {:x 175/184, :y 1} {:x 22/23, :y 1} {:x 177/184, :y 1} {:x 89/92, :y 1} {:x 179/184, :y 1} {:x 45/46, :y 1} {:x 181/184, :y 1} {:x 91/92, :y 1} {:x 183/184, :y 1} {:x 1, :y 1})}], :width 400, :height 247.2188, :padding {:bottom 40, :top 10, :right 10, :left 55}}}"}
;; <=

;; @@

;; @@
